# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch (master/main)
  push:
    branches: ['master'] # Adjust if your default branch is 'main'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: 'pages'
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 20 # Or your preferred Node.js version
          cache: 'npm'
          cache-dependency-path: website/package-lock.json # Point to the correct lock file location
      - name: Install dependencies
        run: npm install
        working-directory: ./website # Run npm install in the website directory
      - name: Build
        run: npm run build
        working-directory: ./website # Run npm build in the website directory
      - name: Create .nojekyll file
        run: touch ./website/dist/.nojekyll # Add .nojekyll file to disable Jekyll
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload entire repository
          path: './website/dist' # Point to the correct build output directory
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4